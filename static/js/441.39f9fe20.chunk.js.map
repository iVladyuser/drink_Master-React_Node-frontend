{"version":3,"file":"static/js/441.39f9fe20.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/TitlePage/TitlePages.styled.jsx","components/TitlePage/TitlePage.jsx","components/SearchDrinksInput/SearchDrinksInput.styled.jsx","components/SearchDrinksInput/SearchDrinksInput.jsx","components/ForSelectValue/CategoriesList.jsx","components/ForSelectValue/IngredientsList.jsx","components/CustomSelectForDrinksPage/CustomSelect.styled.jsx","components/CustomSelectForDrinksPage/SelectArrow/SelectArrow.styled.jsx","components/CustomSelectForDrinksPage/SelectArrow/SelectArrow.jsx","components/CustomSelectForDrinksPage/CustomSelect.jsx","components/SvgComponents/SvgComponents.jsx","pages/DrinksPages/DrinksPages.jsx"],"sourcesContent":["import ReactPaginate from 'react-paginate';\nimport styled from 'styled-components';\n\nexport const Pagination = styled(ReactPaginate).attrs({\n  activeClassName: 'active',\n})`\n  padding: 14px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 40px;\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 24px;\n    margin-top: 80px;\n  }\n\n  li {\n    width: 27px;\n    height: 27px;\n    &:not(:nth-child(-n + 2)) {\n      margin-left: 24px;\n    }\n  }\n\n  li a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    font-size: 12px;\n    font-weight: 500;\n    line-height: 1.33;\n    color: #f3f3f3;\n    cursor: pointer;\n  }\n\n  li.previous {\n    margin-right: 48px;\n\n    @media screen and (min-width: 768px) {\n      margin-right: 40px;\n    }\n  }\n\n  li.next {\n    margin-left: 48px;\n\n    @media screen and (min-width: 768px) {\n      margin-left: 40px;\n    }\n  }\n\n  li.previous a,\n  li.next a,\n  li.break a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  li.active a {\n    background-color: #4070cd80;\n    color: #f3f3f3;\n  }\n\n  li.disabled a {\n    color: grey;\n  }\n\n  li.disable,\n  li.disabled a {\n    cursor: default;\n  }\n\n  li.disabled a svg {\n    &:hover,\n    &:focus,\n    &:active {\n      fill: #f3f3f34d;\n    }\n  }\n`;\n","import { Pagination } from './Pagination.styled';\nimport { RxChevronLeft, RxChevronRight } from 'react-icons/rx';\n\nexport const Paginator = ({\n  limit,\n  currentPage,\n  items,\n  handlePageChange,\n  pageRangeDisplayed,\n}) => {\n  const pageCount = Math.ceil(items / limit);\n\n  const handlePageClick = ({ selected }) => {\n    handlePageChange(selected);\n\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <div>\n      <Pagination\n        pageCount={pageCount}\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={pageRangeDisplayed}\n        previousLabel={<RxChevronLeft />}\n        nextLabel={<RxChevronRight />}\n        breakLabel={'...'}\n        forcePage={currentPage}\n        renderOnZeroPageCount={null}\n        marginPagesDisplayed={1}\n      />\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h1\n`\nfont-family: 'Manrope', sans-serif;\nfont-weight: 600;\nfont-size: 32px;\nline-height: 1.19;\ncolor: #f3f3f3;\nmargin-bottom: 40px;\n\n@media (min-width: 768px) {\n  font-size: 56px;\n  line-height: 1.07;\n  margin-bottom: 60px;\n}\n\n@media (min-width: 1440px) {\n  font-size: 64px;\n  line-height: 1.06;\n  margin-bottom: 80px;\n}`;\n","import { Title } from './TitlePages.styled';\nexport default function TitlePage({ title }) {\n    return(\n      <Title >\n      {title}  \n      </Title>\n    )\n  }","import styled from 'styled-components';\n\n\nexport const SearchInput = styled.input\n`font-family: 'Manrope', sans-serif;\npadding: 10px 15px;\n border-radius: 200px;\n border: 1px solid rgba(243, 243, 243, 0.2);\n background: transparent;\n font-size: 14px;\n font-weight: 400;\n line-height: 1.29px;\n outline: transparent;\n width: 335px;\n height: 54px;\n color: #f3f3f3;\n &:hover {\n    background-color: #f4f8fa;\n  }\n\n  @media (min-width: 768px) {\n    width: 264px;\n    height: 56px;\n    font-size: 17px;\n    line-height: 1.56;\n  }\n  `;","import { useState } from 'react';\n\nimport {  SearchInput } from './SearchDrinksInput.styled';\n\nconst SearchDrinksInput = () => {\n  const [name_drinks, setName_drinks] = useState('');\n\n  console.log(\"name_drinks:\" + name_drinks);\n\nfunction showInput(event){\nsetName_drinks(event.target.value);\n}\n  \n  return (\n      <SearchInput\n        type=\"text\"\n        placeholder=\"Enter the text\"\n        autoFocus\n        onInput= {showInput}\n      />\n  );\n};\n\nexport default SearchDrinksInput;","export const categoriesList = [\n    'Ordinary Drink',\n    'Cocktail',\n    'Shake',\n    'Other/Unknown',\n    'Cocoa',\n    'Shot',\n    'Coffee/Tea',\n    'Homemade Liqueur',\n    'Punch/Party Drink',\n    'Beer',\n    'Soft Drink',\n  ];","export const ingredientsList = [\n    'Highball glass',\n    'Cocktail glass',\n    'Old-fashioned glass',\n    'Whiskey Glass',\n    'Collins glass',\n    'Pousse cafe glass',\n    'Champagne flute',\n    'Whiskey sour glass',\n    'Cordial glass',\n    'Brandy snifter',\n    'White wine glass',\n    'Nick and Nora Glass',\n    'Hurricane glass',\n    'Coffee mug',\n    'Shot glass',\n    'Jar',\n    'Irish coffee cup',\n    'Punch bowl',\n    'Pitcher',\n    'Pint glass',\n    'Copper Mug',\n    'Wine Glass',\n    'Beer mug',\n    'Margarita/Coupette glass',\n    'Beer pilsner',\n    'Beer Glass',\n    'Parfait glass',\n    'Mason jar',\n    'Margarita glass',\n    'Martini Glass',\n    'Balloon Glass',\n    'Coupe Glass',\n  ];","import styled from '@emotion/styled';\n\nexport const CustomSelect = styled.button`\n  width: 335px;\n  height: 54px;\n  position: relative;\n  padding-left: 0;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  text-align: right;\n  color: #f3f3f3;\n\n  border-style: none;\n  border-bottom: 1px solid #f3f3f380;\n  background: #161f37;\n  border-radius: 200px;\n  &:focus {\n    border-bottom: 1px solid #f3f3f3;\n\n    outline: transparent;\n  }\n\n  &:focus span,\n  &:hover span {\n    color: #f3f3f3;\n  }\n\n  &::after {\n    padding-bottom: 14px;\n  }\n\n  span {\n    display: block;\n  }\n\n  @media (min-width: 768px) {\n    width: 199px;\n    height: 56px;\n  }\n`;\n\nexport const PlaceholderWrap = styled.div`\n  display: flex;\n  align-items: center;\n  \n  color: ${({ selected }) => (!selected ? '#f3f3f380' : '#F3F3F3')};\n\n  span {\n    display: block;\n  }\n`;\nexport const Span = styled.span`\n  margin-left: 24px;\n\n  color: #f3f3f3;\n  font-size: 14px;\n  line-height: 1.29px;\n  color: ${({ selected }) => (!selected ? '#f3f3f380' : '#F3F3F3')};\n  font-family: 'Manrope', sans-serif;\n  font-weight: 400;\n  @media (min-width: 768px) {\n    font-size: 17px;\n    line-height: 1.5;\n  }\n  @media (min-width: 1440px) {\n    line-height: 1.56;\n  }\n`;\n\nexport const DropMenu = styled.div`\n  max-height: 300px;\n  overflow-y: scroll;\n  scroll-behavior: smooth;\n  width: 335px;\n\n  transition: 500ms linear color;\n\n  &::-webkit-scrollbar {\n    margin-top: 4px;\n    width: 8px;\n    background-color: transparent;\n    height: 4px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #f3f3f380;\n    border-radius: 4px;\n  }\n  &::-webkit-scrollbar-track-piece {\n    background: transparent;\n    margin-top: 18px;\n    margin-bottom: 18px;\n    margin-right: 4px;\n  }\n\n  position: absolute;\n  top: 58px;\n  right: 0;\n  padding: 18px 24px;\n\n  font-size: 12;\n  line-height: 1.3;\n  color: #f3f3f380;\n\n  border-radius: 12px;\n  background-color: #161f37;\n  z-index: 10;\n\n  div:not(:last-of-type) {\n    margin-bottom: 6px;\n  }\n\n  div:hover,\n  div:focus {\n    color: #f3f3f3;\n  }\n  @media (min-width: 768px) {\n    width: 199px;\n    top: 60px;\n    padding: 14px 23px;\n  }\n  @media (min-width: 1440px) {\n    width: 199px;\n  }\n`;\n\nexport const SelectWrapper = styled.div`\n  position: relative;\n  width: 335px;\n\n  @media (min-width: 768px) {\n    width: 199px;\n  }\n`;\n\nexport const SelectItem = styled.div`\n  cursor: pointer;\n  font-family: inherit;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.2;\n  color: #f3f3f3;\n\n  @media (min-width: 768px) {\n    font-size: 17px;\n    line-height: 1.5;\n  }\n  @media (min-width: 1440px) {\n    line-height: 1.56;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  display: block;\n  padding: 4px;\n\n  margin-bottom: 8px;\n\n  font-size: 12;\n  line-height: 1.3;\n  color: #f3f3f380;\n  width: 278px;\n  border-style: none;\n  background-color: #161f37;\n  border-bottom: 1px solid #f3f3f311;\n\n  &:focus {\n    color: #f3f3f3;\n    outline: transparent;\n  }\n\n  &::placeholder {\n    color: #f3f3f380;\n  }\n\n  &:focus::placeholder {\n    color: transparent;\n  }\n\n  @media (min-width: 768px) {\n    width: 145px;\n  }\n`;\n","import styled from 'styled-components';\nimport { RxChevronDown } from 'react-icons/rx';\n\nexport const ArrowStyled = styled(RxChevronDown)`\n  position: absolute;\n  right: 17px;\n  width: 20px;\n  height: 20px;\n  stroke-width: 1.8;\n  stroke: #f3f3f3;\n  transition: all 0.2s ease;\n  transform: ${({ open }) => (open ? 'rotate(180deg)' : 'rotate(0deg)')};\n  @media (min-width: 768px) {\n    right: 18px;\n  }\n`;\n","import { ArrowStyled } from './SelectArrow.styled';\n\nexport const SelectArrow = ({ isOpen }) => {\n  return <ArrowStyled open={isOpen} />;\n};\n","import { useField } from 'formik';\nimport { useEffect, useRef, useState } from 'react';\n\nimport {\n  CustomSelect,\n  DropMenu,\n  PlaceholderWrap,\n  SearchInput,\n  SelectItem,\n  SelectWrapper,\n  Span\n} from './CustomSelect.styled';\n\n\nimport { SelectArrow } from './SelectArrow/SelectArrow';\n\nconst CustomSelectMenu = ({ items, title }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const selectRef = useRef();\n  const searchRef = useRef();\n  const dropdownRef = useRef();\n\n  const titleValue = title.toLowerCase();\n\n  const filteredItems = value =>\n    items.filter(item => item.toLowerCase().includes(value.toLowerCase()));\n\n  const [, meta, { setValue }] = useField({ name: titleValue });\n\n  const toggleMenu = () => {\n    setIsOpen(prevState => !prevState);\n  };\n\n  const handleClickItem = item => {\n    toggleMenu();\n    setValue(item);\n    setSearchQuery('');\n  };\n\n  useEffect(() => {\n    if (searchRef) {\n      setSearchQuery('');\n      if (isOpen && searchRef.current) {\n        searchRef.current.focus();\n      }\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    const handler = e => {\n      if (selectRef.current && selectRef.current.contains(e.target)) {\n        setIsOpen(true);\n      }\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsOpen(false);\n      }\n    };\n\n    window.addEventListener('click', handler);\n    return () => {\n      window.removeEventListener('click', handler);\n    };\n  });\n\n  return (\n    <SelectWrapper>\n      <CustomSelect type=\"button\" ref={selectRef} menuOpen={isOpen}>\n        {items && (\n          <PlaceholderWrap selected={meta.value}>\n            <Span>{meta.value ? meta.value : ''}</Span>\n            <SelectArrow isOpen={isOpen} />\n          </PlaceholderWrap>\n        )}\n      </CustomSelect>\n      {isOpen && items && (\n        <>\n          <DropMenu ref={dropdownRef}>\n            {items.length > 12 && (\n              <SearchInput\n                ref={searchRef}\n                type=\"text\"\n                name={`${title}Filter`}\n                placeholder=\"Search...\"\n                onChange={e => setSearchQuery(e.target.value)}\n              />\n            )}\n            {filteredItems(searchQuery).map((item, index) => (\n              <SelectItem key={index} onClick={() => handleClickItem(item)}>\n                {item}\n              </SelectItem>\n            ))}\n          </DropMenu>\n        </>\n      )}\n    </SelectWrapper>\n  );\n};\n\nexport default CustomSelectMenu;\n","const SvgGeneratorSvgSelector = ({ id }) => {\n    switch (id) {\n      case 'svglupa':\n        return (\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M9.16667 15.8333C12.8486 15.8333 15.8333 12.8486 15.8333 9.16667C15.8333 5.48477 12.8486 2.5 9.16667 2.5C5.48477 2.5 2.5 5.48477 2.5 9.16667C2.5 12.8486 5.48477 15.8333 9.16667 15.8333Z\" stroke=\"#F3F3F3\" stroke-width=\"1.8\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            <path d=\"M17.5 17.5L13.875 13.875\" stroke=\"#F3F3F3\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n        );\n      \n      default:\n        return <svg></svg>;\n    }\n  };\n  export default SvgGeneratorSvgSelector;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport TitlePage from '../../components/TitlePage/TitlePage';\nimport SearchDrinksInput from '../../components/SearchDrinksInput/SearchDrinksInput';\nimport { categoriesList } from '../../components/ForSelectValue/CategoriesList';\nimport { ingredientsList } from '../../components/ForSelectValue/IngredientsList';\nimport {\n  Container,\n  FormStyled,\n  DrinksPageStyle,\n  WraperForm,\n  ForInputLupaSvg,\n  WraperSvg,\n  ContainerForPage,\n  ListCocktail,\n} from './DrinksPages.styled';\nimport ItemCocktail from '../../components/ItemCocktail/ItemCocktail';\nimport CustomSelect from 'components/CustomSelectForDrinksPage';\nimport { Formik } from 'formik';\nimport { getMainPageAllDrinks } from 'services/fetchAllDrinks';\nimport SvgGeneratorSvgSelector from '../../components/SvgComponents';\nimport { Paginator } from '../../components/Pagination/Pagination';\nimport {\n  selectAllDrinks,\n  selectIsLoading,\n  selectDrinksError,\n} from 'services/fetchAllDrinks';\n\nconst initialValues = {\n  category: 'All categories',\n  ingredients: 'Ingredients',\n};\n\nconst DrinksPage = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectAllDrinks);\n  console.log('Vladuser', items);\n  const status = useSelector(selectIsLoading);\n  const error = useSelector(selectDrinksError);\n  const [currentPage, setCurrentPage] = useState(0);\n  const limit = 11;\n\n  useEffect(() => {\n    dispatch(getMainPageAllDrinks());\n  }, [dispatch]);\n\n  const handlePageChange = selectedPage => {\n    setCurrentPage(selectedPage);\n  }\n\n  const totalCount = items.length;\n\n  if (status === 'loading') return <div>Loading...</div>;\n\n  if (error) return <div>error</div>;\n\n  //  if (error) return <ErrorPage />;\n\n  // if (!items || items.length === 0) {\n  //   return (\n  //     <Container>\n  //       <FavoritePageTitle>Favorites</FavoritePageTitle>\n  //       <NoImg text=\"You haven't added any favorite cocktails yet.\" />\n  //     </Container>\n  //   );\n  // }\n\n  return (\n    <DrinksPageStyle>\n      <ContainerForPage>\n        <Container>\n          <TitlePage title={'Drinks'} />\n          <WraperForm>\n            <ForInputLupaSvg>\n              <SearchDrinksInput />\n              <WraperSvg>\n                <SvgGeneratorSvgSelector id=\"svglupa\" />\n              </WraperSvg>\n            </ForInputLupaSvg>\n            <Formik initialValues={initialValues}>\n              {({ setFieldValue }) => (\n                <FormStyled>\n                  <CustomSelect items={categoriesList} title={'Category'} />\n                  <CustomSelect items={ingredientsList} title={'Ingredients'} />\n                </FormStyled>\n              )}\n            </Formik>\n          </WraperForm>\n          <ListCocktail>\n            {items.map(drink => (\n              <ItemCocktail drink={drink} />\n            ))}\n          </ListCocktail>\n           <Paginator\n        limit={limit}\n        currentPage={currentPage}\n        items={totalCount}\n        handlePageChange={handlePageChange}\n        pageRangeDisplayed={5}\n      /> \n        </Container>\n      </ContainerForPage>\n    </DrinksPageStyle>\n  );\n};\n\nexport default DrinksPage;\n"],"names":["Pagination","styled","ReactPaginate","attrs","activeClassName","_templateObject","_taggedTemplateLiteral","Paginator","_ref","limit","currentPage","items","handlePageChange","pageRangeDisplayed","pageCount","Math","ceil","_jsx","children","onPageChange","_ref2","selected","window","scrollTo","top","behavior","previousLabel","RxChevronLeft","nextLabel","RxChevronRight","breakLabel","forcePage","renderOnZeroPageCount","marginPagesDisplayed","Title","TitlePage","title","SearchInput","_useState","useState","_useState2","_slicedToArray","name_drinks","setName_drinks","console","log","type","placeholder","autoFocus","onInput","event","target","value","categoriesList","ingredientsList","CustomSelect","PlaceholderWrap","_templateObject2","Span","_templateObject3","DropMenu","_templateObject4","SelectWrapper","_templateObject5","SelectItem","_templateObject6","_templateObject7","ArrowStyled","RxChevronDown","open","SelectArrow","isOpen","setIsOpen","_useState3","_useState4","searchQuery","setSearchQuery","selectRef","useRef","searchRef","dropdownRef","titleValue","toLowerCase","_useField","useField","name","_useField2","meta","setValue","handleClickItem","item","prevState","useEffect","current","focus","handler","e","contains","addEventListener","removeEventListener","_jsxs","ref","menuOpen","_Fragment","length","concat","onChange","filter","includes","map","index","onClick","id","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","initialValues","category","ingredients","dispatch","useDispatch","useSelector","selectAllDrinks","status","selectIsLoading","error","selectDrinksError","setCurrentPage","getMainPageAllDrinks","totalCount","DrinksPageStyle","ContainerForPage","Container","WraperForm","ForInputLupaSvg","SearchDrinksInput","WraperSvg","SvgGeneratorSvgSelector","Formik","setFieldValue","FormStyled","ListCocktail","drink","ItemCocktail","selectedPage"],"sourceRoot":""}