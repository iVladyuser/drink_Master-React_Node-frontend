{"version":3,"file":"static/js/636.4d9c2248.chunk.js","mappings":"kPAEaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,Q,GAEJF,EAAAA,GAAAA,IAAUG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,Q,6BCF5BE,EAAmBJ,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAE7BG,EAAYL,EAAAA,GAAAA,OAAaG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,Q,oBCFzBI,EAAeN,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAEzBK,EAAgBP,EAAAA,GAAAA,IAAUG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,QAE1BM,EAAgBR,EAAAA,GAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,QAE1BQ,EAASV,EAAAA,GAAAA,IAAUW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,QAEnBU,EAAOZ,EAAAA,GAAAA,KAAWa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,QAElBY,EAAYd,EAAAA,GAAAA,IAAUe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,Q,SCkDnC,EAjDiB,SAAHc,GAA+B,IAAzBC,EAAQD,EAARC,SAAUC,EAAOF,EAAPE,QAC5BC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAE1BI,GAAiBC,EAAAA,EAAAA,IAAS,QAAjBC,GAAwBL,EAAAA,EAAAA,GAAAG,EAAA,GAApB,GAab,OACEG,EAAAA,EAAAA,MAACtB,EAAY,CAAAuB,SAAA,EACXC,EAAAA,EAAAA,KAAA,SACEC,IAAKb,EACLc,KAAK,OACLC,KAAK,OACLC,GAAG,WACHC,SAlBe,SAAAC,GAAM,IAADC,EAClBC,EAAoC,QAA3BD,EAAGD,EAAEG,cAAcC,MAAM,UAAE,IAAAH,EAAAA,EAAI,KAExCd,EAAUe,EAAYG,IAAIC,gBAAgBJ,GAAa,KAEzDf,IACFC,EAAWD,GACXN,EAAS,OAAQqB,GAErB,EAUMK,OAAO,aAETb,EAAAA,EAAAA,KAACtB,EAAa,CAAAqB,UACZD,EAAAA,EAAAA,MAAA,SAAOgB,QAAQ,WAAUf,SAAA,CACtBN,GAAWL,EAAQ2B,QAAQC,QAC1BhB,EAAAA,EAAAA,KAACvB,EAAa,CAAAsB,UACZC,EAAAA,EAAAA,KAAA,OAAKI,GAAG,gBAAgBa,IAAKxB,EAASyB,IAAI,YAG9CpB,EAAAA,EAAAA,MAAClB,EAAM,CAAAmB,SAAA,EACLC,EAAAA,EAAAA,KAAClB,EAAI,CAAAiB,SACFN,GAAWL,EAAQ2B,QAAQC,OAC1BhB,EAAAA,EAAAA,KAACmB,EAAAA,IAAS,CAACC,KAAM,MAEjBpB,EAAAA,EAAAA,KAACqB,EAAAA,IAAO,CAACD,KAAM,OAGlB3B,GAAWL,EAAQ2B,QAAQC,MAAQ,cAAgB,oBAIzDnB,EAAKyB,SAAWzB,EAAK0B,OAAQvB,EAAAA,EAAAA,KAAChB,EAAS,CAAAe,SAAEF,EAAK0B,QAAqB,OAG1E,E,UC1DaC,EAAUtD,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAEpBqD,EAAiBvD,EAAAA,EAAAA,IAAUG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,QAE3BsD,EAAcxD,EAAAA,EAAAA,MAAYS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,QAE1BuD,EAAezD,EAAAA,EAAAA,IAAUW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,QAEzBwD,GAAc1D,EAAAA,EAAAA,GAAO2D,EAAAA,GAAP3D,CAAaa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,QAE3B0D,EAAkB5D,EAAAA,EAAAA,MAAYe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,QAE9B2D,GAAa7D,EAAAA,EAAAA,GAAO2D,EAAAA,GAAP3D,CAAa8D,IAAAA,GAAA5D,EAAAA,EAAAA,GAAA,QAE1B6D,EAAsB/D,EAAAA,EAAAA,IAAUgE,IAAAA,GAAA9D,EAAAA,EAAAA,GAAA,QAEhCY,EAAYd,EAAAA,EAAAA,IAAUiE,IAAAA,GAAA/D,EAAAA,EAAAA,GAAA,QC8DnC,EAlEmB,SAAHc,GACAA,EAAdkD,eACWlD,EAAXmD,YAKK,IAJLlD,EAAQD,EAARC,SACAmC,EAAOpC,EAAPoC,QACAgB,EAAMpD,EAANoD,OACAlD,EAAOF,EAAPE,QAEA,OACEU,EAAAA,EAAAA,MAAC0B,EAAO,CAAAzB,SAAA,EACNC,EAAAA,EAAAA,KAACuC,EAAQ,CAACpD,SAAUA,EAAUC,QAASA,KAEvCU,EAAAA,EAAAA,MAAC2B,EAAc,CAAA1B,SAAA,EACbD,EAAAA,EAAAA,MAAC6B,EAAY,CAAA5B,SAAA,EACXC,EAAAA,EAAAA,KAAC0B,EAAW,CAACZ,QAAQ,QAAOf,SAAC,sBAC7BC,EAAAA,EAAAA,KAAC4B,EAAW,CAACzB,KAAM,QAASqC,YAAY,qBACvClB,EAAQmB,OAASH,EAAOG,OACvBzC,EAAAA,EAAAA,KAAChB,EAAS,CAAAe,SAAEuC,EAAOG,QACjB,SAGN3C,EAAAA,EAAAA,MAAC6B,EAAY,CAAA5B,SAAA,EACXC,EAAAA,EAAAA,KAAC0B,EAAW,CAACZ,QAAQ,SAAQf,SAAC,wBAC9BC,EAAAA,EAAAA,KAAC4B,EAAW,CAACzB,KAAM,SAAUqC,YAAY,uBACxClB,EAAQoB,QAAUJ,EAAOI,QACxB1C,EAAAA,EAAAA,KAAChB,EAAS,CAAAe,SAAEuC,EAAOI,SACjB,SAON5C,EAAAA,EAAAA,MAACmC,EAAmB,CAClBU,KAAK,qBACL,kBAAgB,2BAA0B5C,SAAA,EAE1CD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC+B,EAAU,CACT7B,KAAK,QACLC,KAAK,gBACLC,GAAG,iBACHY,MAAO,eAEThB,EAAAA,EAAAA,KAAC8B,EAAe,CAAChB,QAAQ,iBAAgBf,SAAC,kBAK5CD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC+B,EAAU,CACT7B,KAAK,QACLC,KAAK,gBACLC,GAAG,oBACHY,MAAO,mBAEThB,EAAAA,EAAAA,KAAC8B,EAAe,CAAChB,QAAQ,oBAAmBf,SAAC,6BAQzD,ECjEM6C,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KAMHG,SAAS,qCACZP,MAAOI,EAAAA,KAAaI,OAAOD,SAAS,8BACpCN,OAAQG,EAAAA,KAAaI,OAAOD,SAAS,8BACrCE,SAAUL,EAAAA,KAAaG,SAAS,4BAChCG,MAAON,EAAAA,KAAaG,SAAS,yBAC7BI,YAAaP,EAAAA,KAEVQ,GACCR,EAAAA,KAAaC,MAAM,CACjBL,MAAOI,EAAAA,KAAaG,SAAS,yBAC7BM,QAAST,EAAAA,KAAaG,SAAS,6BAGlCA,WACAO,IAAI,EAAG,2BACVC,kBAAmBX,EAAAA,KAEhBI,OACAD,SAAS,iCAGRS,EAAgB,CACpBV,KAAM,KACNN,MAAO,GACPC,OAAQ,GACRQ,SAAU,GACVC,MAAO,GACPO,cAAe,YACfN,YAAa,GACbI,kBAAmB,IA2CrB,EAxCiB,WACf,IAAMpE,GAAUuE,EAAAA,EAAAA,UAWhB,OACE7D,EAAAA,EAAAA,MAACxB,EAAgB,CAAAyB,SAAA,EACfC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAC4D,EAAAA,GAAM,CACLH,cAAeA,EACfb,iBAAkBA,EAClBiB,SAfe,SAACC,EAAMC,GAC1BA,EAAOC,YACP5E,EAAQ2B,QAAQC,MAAQ,IAC1B,EAY6BjB,SAEtB,SAAAb,GAAA,IAAG+E,EAAa/E,EAAb+E,cAAe3C,EAAOpC,EAAPoC,QAASgB,EAAMpD,EAANoD,OAAM,OAChCxC,EAAAA,EAAAA,MAACoE,EAAAA,GAAI,CAAAnE,SAAA,EACHC,EAAAA,EAAAA,KAACmE,EAEC,CACAhF,SAAU8E,EACV3B,OAAQA,EACRhB,QAASA,EACTlC,QAASA,KAIXY,EAAAA,EAAAA,KAACzB,EAAS,CAAC2B,KAAK,SAAQH,SAAC,UACpB,MAKjB,ECzEA,GAZqB,WACnB,OACEC,EAAAA,EAAAA,KAAC/B,EAAS,CAAA8B,UACRC,EAAAA,EAAAA,KAACoE,EAAQ,KAOf,C","sources":["pages/AddDrinkPages/AddDrinkPages.styled.jsx","components/AddDrinkForm/MainForm/MainForm.styled.jsx","components/AddDrinkForm/AddImageForm/AddImage.styled.jsx","components/AddDrinkForm/AddImageForm/AddImage.jsx","components/AddDrinkForm/TitleBlock/TitleBlock.styled.jsx","components/AddDrinkForm/TitleBlock/TitleBlock.jsx","components/AddDrinkForm/MainForm/MainForm.jsx","pages/AddDrinkPages/AddDrinkPages.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div``;\n\nexport const AdditionalBlock = styled.div``;\n","import { styled } from 'styled-components';\n\nexport const DrinkFormWrapper = styled.div``;\n\nexport const AddButton = styled.button``;\n","import { styled } from 'styled-components';\n\nexport const InputWrapper = styled.div``;\n\nexport const BackgroundImg = styled.div``;\n\nexport const AddFileButton = styled.div``;\n\nexport const Button = styled.div``;\n\nexport const Icon = styled.span``;\n\nexport const ErrorText = styled.div``;\n","import { TfiPlus, TfiReload } from 'react-icons/tfi';\n\nimport {\n  AddFileButton,\n  BackgroundImg,\n  Button,\n  Icon,\n  InputWrapper,\n  ErrorText,\n} from './AddImage.styled';\nimport { useState } from 'react';\nimport { useField } from 'formik';\n\nconst AddImage = ({ setValue, fileRef }) => {\n  const [fileUrl, setFileUrl] = useState('');\n\n  const [, meta] = useField('file');\n\n  const onChangeFile = e => {\n    const imgObject = e.currentTarget.files[0] ?? null;\n\n    const fileUrl = imgObject ? URL.createObjectURL(imgObject) : null;\n\n    if (fileUrl) {\n      setFileUrl(fileUrl);\n      setValue('file', imgObject);\n    }\n  };\n\n  return (\n    <InputWrapper>\n      <input\n        ref={fileRef}\n        type=\"file\"\n        name=\"file\"\n        id=\"add-file\"\n        onChange={onChangeFile}\n        accept=\"image/*\"\n      />\n      <AddFileButton>\n        <label htmlFor=\"add-file\">\n          {fileUrl && fileRef.current.value && (\n            <BackgroundImg>\n              <img id=\"uploaded-file\" src={fileUrl} alt=\"file\" />\n            </BackgroundImg>\n          )}\n          <Button>\n            <Icon>\n              {fileUrl && fileRef.current.value ? (\n                <TfiReload size={16} />\n              ) : (\n                <TfiPlus size={16} />\n              )}\n            </Icon>\n            {fileUrl && fileRef.current.value ? 'Update file' : 'Add image'}\n          </Button>\n        </label>\n      </AddFileButton>\n      {meta.touched && meta.error ? <ErrorText>{meta.error}</ErrorText> : null}\n    </InputWrapper>\n  );\n};\nexport default AddImage;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Wrapper = styled.div``;\n\nexport const ContentWrapper = styled.div``;\n\nexport const LabelStyled = styled.label``;\n\nexport const FieldWrapper = styled.div``;\n\nexport const FieldStyled = styled(Field)``;\n\nexport const FieldRadioLabel = styled.label``;\n\nexport const FieldRadio = styled(Field)``;\n\nexport const RadioButtonsWrapper = styled.div``;\n\nexport const ErrorText = styled.div``;\n","import AddImage from '../AddImageForm';\n// import CustomSelect from '../CustomSelect';\n\nimport {\n  FieldStyled,\n  FieldWrapper,\n  LabelStyled,\n  FieldRadio,\n  FieldRadioLabel,\n  RadioButtonsWrapper,\n  Wrapper,\n  ContentWrapper,\n  ErrorText,\n} from './TitleBlock.styled';\n\nconst TitleBlock = ({\n  categoriesList,\n  glassesList,\n  setValue,\n  touched,\n  errors,\n  fileRef,\n}) => {\n  return (\n    <Wrapper>\n      <AddImage setValue={setValue} fileRef={fileRef} />\n\n      <ContentWrapper>\n        <FieldWrapper>\n          <LabelStyled htmlFor=\"title\">Enter item title</LabelStyled>\n          <FieldStyled name={'title'} placeholder=\"Enter item title\" />\n          {touched.title && errors.title ? (\n            <ErrorText>{errors.title}</ErrorText>\n          ) : null}\n        </FieldWrapper>\n\n        <FieldWrapper>\n          <LabelStyled htmlFor=\"recipe\">Enter about recipe</LabelStyled>\n          <FieldStyled name={'recipe'} placeholder=\"Enter about recipe\" />\n          {touched.recipe && errors.recipe ? (\n            <ErrorText>{errors.recipe}</ErrorText>\n          ) : null}\n        </FieldWrapper>\n\n        {/* <CustomSelect />\n\n        <CustomSelect /> */}\n\n        <RadioButtonsWrapper\n          role=\"cocktailTypeSelect\"\n          aria-labelledby=\"cocktailTypeSelect-group\"\n        >\n          <div>\n            <FieldRadio\n              type=\"radio\"\n              name=\"alcoholicType\"\n              id=\"radioAlcoholic\"\n              value={'Alcoholic'}\n            />\n            <FieldRadioLabel htmlFor=\"radioAlcoholic\">\n              Alcoholic\n            </FieldRadioLabel>\n          </div>\n\n          <div>\n            <FieldRadio\n              type=\"radio\"\n              name=\"alcoholicType\"\n              id=\"radioNonAlcoholic\"\n              value={'Non-alcoholic'}\n            />\n            <FieldRadioLabel htmlFor=\"radioNonAlcoholic\">\n              Non-alcoholic\n            </FieldRadioLabel>\n          </div>\n        </RadioButtonsWrapper>\n      </ContentWrapper>\n    </Wrapper>\n  );\n};\n\nexport default TitleBlock;\n","import { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { useRef } from 'react';\n\nimport { AddButton, DrinkFormWrapper } from './MainForm.styled';\n\nimport TitleBlock from '../TitleBlock';\n// import IngredientsBlock from '../IngredientsBlock/';\n// import RecipePreparationBlock from '../RecipePreparationBlock/';\n\n// import { useFetchGlasses } from '../../../hooks/useFetchGlasses';\n// import { useFetchCategories } from '../../../hooks/useFetchCategories';\n// import { useFetchIngredients } from '../../../hooks/useFetchIngredients';\n\nconst validationSchema = yup.object().shape({\n  file: yup\n    .mixed()\n    // .test('file', 'Please select a valid image file', value => {\n    //   if (!value) return true;\n    //   return value && value.type.startsWith('image/*');\n    // })\n    .required('Please add the drink recipe image'),\n  title: yup.string().trim().required('Please enter a drink title'),\n  recipe: yup.string().trim().required('Please enter about  recipe'),\n  category: yup.string().required('Please select a category'),\n  glass: yup.string().required('Please select a glass'),\n  ingredients: yup\n    .array()\n    .of(\n      yup.object().shape({\n        title: yup.string().required('Please select a title'),\n        measure: yup.string().required('Please enter a measure'),\n      })\n    )\n    .required()\n    .min(1, 'Select more than 1 item'),\n  recipePreparation: yup\n    .string()\n    .trim()\n    .required('Please enter about a recipe'),\n});\n\nconst initialValues = {\n  file: null,\n  title: '',\n  recipe: '',\n  category: '',\n  glass: '',\n  alcoholicType: 'Alcoholic',\n  ingredients: [],\n  recipePreparation: '',\n};\n\nconst MainForm = () => {\n  const fileRef = useRef();\n\n  const onSubmitForm = (data, action) => {\n    action.resetForm();\n    fileRef.current.value = null;\n  };\n\n  // const categories = useFetchCategories();\n  // const glasses = useFetchGlasses();\n  // const ingredients = useFetchIngredients();\n\n  return (\n    <DrinkFormWrapper>\n      <h2>Add drink</h2>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmitForm}\n      >\n        {({ setFieldValue, touched, errors }) => (\n          <Form>\n            <TitleBlock\n              // categoriesList={categories.drinkCategories}\n              // glassesList={glasses.drinkGlasses}\n              setValue={setFieldValue}\n              errors={errors}\n              touched={touched}\n              fileRef={fileRef}\n            />\n            {/* <IngredientsBlock />\n            <RecipePreparationBlock /> */}\n            <AddButton type=\"submit\">Add</AddButton>\n          </Form>\n        )}\n      </Formik>\n    </DrinkFormWrapper>\n  );\n};\n\nexport default MainForm;\n","import { Container } from './AddDrinkPages.styled';\n\nimport MainForm from '../../components/AddDrinkForm/MainForm';\n// import PopularDrinks from '../../components/PopularDrinks';\n// import FollowUs from '../../components/FollowUs';\n\nconst AddDrinkPage = () => {\n  return (\n    <Container>\n      <MainForm />\n      {/* <AdditionalBlock>\n        <FollowUs />\n        <PopularDrinks />\n      </AdditionalBlock> */}\n    </Container>\n  );\n};\n\nexport default AddDrinkPage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","DrinkFormWrapper","AddButton","InputWrapper","BackgroundImg","AddFileButton","_templateObject3","Button","_templateObject4","Icon","_templateObject5","ErrorText","_templateObject6","_ref","setValue","fileRef","_useState","useState","_useState2","_slicedToArray","fileUrl","setFileUrl","_useField","useField","meta","_jsxs","children","_jsx","ref","type","name","id","onChange","e","_e$currentTarget$file","imgObject","currentTarget","files","URL","createObjectURL","accept","htmlFor","current","value","src","alt","TfiReload","size","TfiPlus","touched","error","Wrapper","ContentWrapper","LabelStyled","FieldWrapper","FieldStyled","Field","FieldRadioLabel","FieldRadio","_templateObject7","RadioButtonsWrapper","_templateObject8","_templateObject9","categoriesList","glassesList","errors","AddImage","placeholder","title","recipe","role","validationSchema","yup","shape","file","required","trim","category","glass","ingredients","of","measure","min","recipePreparation","initialValues","alcoholicType","useRef","Formik","onSubmit","data","action","resetForm","setFieldValue","Form","TitleBlock","MainForm"],"sourceRoot":""}