{"version":3,"file":"static/js/638.8cd6165e.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/SvgComponents/SvgComponents.jsx","redux/drink/selectorsForDrinksPages.js","components/TitlePage/TitlePages.styled.jsx","components/TitlePage/TitlePage.jsx","components/SearchDrinksInput/SearchDrinksInput.styled.jsx","components/SearchDrinksInput/SearchDrinksInput.jsx","components/ForSelectValue/CategoriesList.jsx","components/ForSelectValue/IngredientsList.jsx","components/CustomSelectForDrinksPage/CustomSelect.styled.jsx","components/CustomSelectForDrinksPage/SelectArrow/SelectArrow.styled.jsx","components/CustomSelectForDrinksPage/SelectArrow/SelectArrow.jsx","components/CustomSelectForDrinksPage/CustomSelect.jsx","pages/DrinksPages/DrinksPages.jsx"],"sourcesContent":["import ReactPaginate from 'react-paginate';\nimport styled from 'styled-components';\n\nexport const Pagination = styled(ReactPaginate).attrs({\n  activeClassName: 'active',\n})`\n  padding: 14px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 40px;\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 24px;\n    margin-top: 80px;\n  }\n\n  li {\n    width: 27px;\n    height: 27px;\n    &:not(:nth-child(-n + 2)) {\n      margin-left: 24px;\n    }\n  }\n\n  li a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    font-size: 12px;\n    font-weight: 500;\n    line-height: 1.33;\n    color: #f3f3f3;\n    cursor: pointer;\n  }\n\n  li.previous {\n    margin-right: 48px;\n\n    @media screen and (min-width: 768px) {\n      margin-right: 40px;\n    }\n  }\n\n  li.next {\n    margin-left: 48px;\n\n    @media screen and (min-width: 768px) {\n      margin-left: 40px;\n    }\n  }\n\n  li.previous a,\n  li.next a,\n  li.break a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  li.active a {\n    background-color: #4070cd80;\n    color: #f3f3f3;\n  }\n\n  li.disabled a {\n    color: grey;\n  }\n\n  li.disable,\n  li.disabled a {\n    cursor: default;\n  }\n\n  li.disabled a svg {\n    &:hover,\n    &:focus,\n    &:active {\n      fill: #f3f3f34d;\n    }\n  }\n`;\n","import { Pagination } from './Pagination.styled';\nimport { RxChevronLeft, RxChevronRight } from 'react-icons/rx';\n\nexport const Paginator = ({\n  limit,\n  currentPage,\n  items,\n  handlePageChange,\n  pageRangeDisplayed,\n}) => {\n  const pageCount = Math.ceil(items / limit);\n\n  const handlePageClick = ({ selected }) => {\n    handlePageChange(selected);\n\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <div>\n      <Pagination\n        pageCount={pageCount}\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={pageRangeDisplayed}\n        previousLabel={<RxChevronLeft />}\n        nextLabel={<RxChevronRight />}\n        breakLabel={'...'}\n        forcePage={currentPage}\n        renderOnZeroPageCount={null}\n        marginPagesDisplayed={1}\n      />\n    </div>\n  );\n};\n","const SvgGeneratorSvgSelector = ({ id }) => {\n  switch (id) {\n    case 'svglupa':\n      return (\n        <svg\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 20 20\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M9.16667 15.8333C12.8486 15.8333 15.8333 12.8486 15.8333 9.16667C15.8333 5.48477 12.8486 2.5 9.16667 2.5C5.48477 2.5 2.5 5.48477 2.5 9.16667C2.5 12.8486 5.48477 15.8333 9.16667 15.8333Z\"\n            stroke=\"#F3F3F3\"\n            strokeWidth=\"1.8\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n          <path\n            d=\"M17.5 17.5L13.875 13.875\"\n            stroke=\"#F3F3F3\"\n            strokeWidth=\"1.8\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      );\n    case 'check':\n      return (\n        <svg\n          width=\"18\"\n          height=\"18\"\n          viewBox=\"0 0 18 18\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M16 3L7.0625 13L3 8.45455\"\n            stroke=\"#F3F3F3\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      );\n\n    default:\n      return <svg></svg>;\n  }\n};\nexport default SvgGeneratorSvgSelector;\n","import { createSelector } from '@reduxjs/toolkit';\n  export const selectAllDrinks = state => state.alldrinks.items;\n  export const selectDrinksError = state => state.alldrinks.error;\n  export const selectIsLoading = state => state.alldrinks.isLoading;\n  export const selectDrinksFilter = state => state.filters;\n  export const selectVisibleDrinks = createSelector(\n    [ selectAllDrinks, selectDrinksFilter],\n    (drinks, filter) => {\n    return drinks.filter(drink => drink.drink.toLowerCase()\n    .includes(filter.toLowerCase()))\n    }\n    )","import styled from 'styled-components';\n\nexport const Title = styled.h1\n`\nfont-family: 'Manrope', sans-serif;\nfont-weight: 600;\nfont-size: 32px;\nline-height: 1.19;\ncolor: #f3f3f3;\nmargin-bottom: 40px;\n\n@media (min-width: 768px) {\n  font-size: 56px;\n  line-height: 1.07;\n  margin-bottom: 60px;\n}\n\n@media (min-width: 1440px) {\n  font-size: 64px;\n  line-height: 1.06;\n  margin-bottom: 80px;\n}`;\n","import { Title } from './TitlePages.styled';\nexport default function TitlePage({ title }) {\n    return(\n      <Title >\n      {title}  \n      </Title>\n    )\n  }","import styled from 'styled-components';\n\n\nexport const SearchInput = styled.input`\n@media screen and (max-width: 320px) {\n  width:  100%;\n }\n\n font-family: 'Manrope', sans-serif;\n padding: 10px 15px;\n border-radius: 200px;\n border: 1px solid rgba(243, 243, 243, 0.2);\n background: transparent;\n font-size: 14px;\n font-weight: 400;\n line-height: 1.29px;\n outline: transparent;\n width: 335px;\n height: 54px;\n color: #f3f3f3;\n &:hover {\n    background-color: #f4f8fa;\n  }\n\n  @media (min-width: 375px) {\n    max-width: 335px;\n  }\n\n  @media (min-width: 768px) {\n    width: 264px;\n    height: 56px;\n    font-size: 17px;\n    line-height: 1.56;\n  }\n  `;","\nimport { useDispatch, useSelector } from 'react-redux';\nimport {  SearchInput } from './SearchDrinksInput.styled';\n import { selectDrinksFilter } from '../../redux/drink/selectorsForDrinksPages';\n import {setDrinksFilter} from '../../redux/drink/sliceFilterForDrinksPages'\nconst SearchDrinksInput = () => {\n  const drinksQueryFilter = useSelector(selectDrinksFilter);\n  const dispatch = useDispatch();\n  const handleFilterChange = e => {\n    const userQuery = e.target.value;\n   \n    \n    \n    const normalizedValue = userQuery.toLowerCase().trim();\n    dispatch(setDrinksFilter(normalizedValue));\n  };\n\n  return (\n      <SearchInput\n        type=\"text\"\n        placeholder=\"Enter the text\"\n        autoFocus\n       value={drinksQueryFilter}\n      \n       onChange= {handleFilterChange}\n      />\n  );\n};\n\nexport default SearchDrinksInput;","export const categoriesList = [\n  'Ordinary Drink',\n  'Cocktail',\n  'Shake',\n  'Other/Unknown',\n  'Cocoa',\n  'Shot',\n  'Coffee/Tea',\n  'Homemade Liqueur',\n  'Punch/Party Drink',\n  'Beer',\n  'Soft Drink',\n];\n  // export const categoryOptions = [\n  //   { value: '', label: 'categoriesList', disabled: true, hidden: true },\n  //   { value: 'Ordinary Drink', label: 'Ordinary Drink' },\n  //   { value: 'Shake', label: 'Shake' },\n  //   { value: 'Other/Unknown', label: 'Other/Unknown' },\n  //   { value: 'Cocoa', label: 'Cocoa' },\n  //   { value: 'Shot', label: 'Shot' },\n  //   { value: 'Coffee/Tea', label: 'Coffee/Tea' },\n  //   { value: 'Homemade Liqueur', label: 'Homemade Liqueur' },\n  //   { value: 'Punch/Party Drink', label: 'Punch/Party Drink' },\n  //   { value: 'Beer', label: 'Beer' },\n  //   { value: 'Soft Drink', label: 'Soft Drink' },\n  // ];\n  \n  export const ingredientOptions = [\n    { value: '', label: 'ingredientsList', disabled: true, hidden: true },\n    { value: 'Highball glass', label: 'Highball glass' },\n    { value: 'Cocktail glass', label: 'Cocktail glass' },\n    { value: 'Old-fashioned glass', label: 'Old-fashioned glass' },\n    { value: 'Whiskey Glass', label: 'Whiskey Glass' },\n    { value: 'Collins glass', label: 'Collins glass' },\n    { value: 'Pousse cafe glass', label: 'Pousse cafe glass' },\n    { value: 'Champagne flute', label: 'Champagne flute' },\n    { value: 'Whiskey sour glass', label: 'Whiskey sour glass' },\n    { value: 'Cordial glass', label: 'Cordial glass' },\n    { value: 'Brandy snifter', label: 'Brandy snifter' },\n    { value: 'White wine glass', label: 'White wine glass' },\n    { value: 'Nick and Nora Glass', label: 'Nick and Nora Glass' },\n    { value: 'Hurricane glass', label: 'Hurricane glass' },\n    { value: 'Highball glass', label: 'Highball glass' },\n    { value: 'Cocktail glass', label: 'Cocktail glass' },\n    { value: 'Old-fashioned glass', label: 'Old-fashioned glass' },\n    { value: 'Whiskey Glass', label: 'Whiskey Glass' },\n    { value: 'Collins glass', label: 'Collins glass' },\n    { value: 'Pousse cafe glass', label: 'Pousse cafe glass' },\n    { value: 'Champagne flute', label: 'Champagne flute' },\n    { value: 'Whiskey sour glass', label: 'Whiskey sour glass' },\n    { value: 'Cordial glass', label: 'Cordial glass' },\n    { value: 'Brandy snifter', label: 'Brandy snifter' },\n    { value: 'White wine glass', label: 'White wine glass' },\n    { value: 'Nick and Nora Glass', label: 'Nick and Nora Glass' },\n    { value: 'Hurricane glass', label: 'Hurricane glass' },\n    { value: 'Whiskey sour glass', label: 'Whiskey sour glass' },\n    { value: 'Mason jar', label: 'Mason jar' },\n    { value: 'Margarita glass', label: 'Margarita glass' },\n    { value: 'Martini Glass', label: 'Martini Glass' },\n    { value: 'Balloon Glass', label: 'Balloon Glass' },\n    { value: 'Coupe Glass', label: 'Coupe Glass' },\n  ];\n  export const ingredientsList = [\n    'Highball glass',\n    'Cocktail glass',\n    'Old-fashioned glass',\n    'Whiskey Glass',\n    'Collins glass',\n    'Pousse cafe glass',\n    'Champagne flute',\n    'Whiskey sour glass',\n    'Cordial glass',\n    'Brandy snifter',\n    'White wine glass',\n    'Nick and Nora Glass',\n    'Hurricane glass',\n    'Coffee mug',\n    'Shot glass',\n    'Jar',\n    'Irish coffee cup',\n    'Punch bowl',\n    'Pitcher',\n    'Pint glass',\n    'Copper Mug',\n    'Wine Glass',\n    'Beer mug',\n    'Margarita/Coupette glass',\n    'Beer pilsner',\n    'Beer Glass',\n    'Parfait glass',\n    'Mason jar',\n    'Margarita glass',\n    'Martini Glass',\n    'Balloon Glass',\n    'Coupe Glass',\n  ];","export const ingredientsList = [\n    'Highball glass',\n    'Cocktail glass',\n    'Old-fashioned glass',\n    'Whiskey Glass',\n    'Collins glass',\n    'Pousse cafe glass',\n    'Champagne flute',\n    'Whiskey sour glass',\n    'Cordial glass',\n    'Brandy snifter',\n    'White wine glass',\n    'Nick and Nora Glass',\n    'Hurricane glass',\n    'Coffee mug',\n    'Shot glass',\n    'Jar',\n    'Irish coffee cup',\n    'Punch bowl',\n    'Pitcher',\n    'Pint glass',\n    'Copper Mug',\n    'Wine Glass',\n    'Beer mug',\n    'Margarita/Coupette glass',\n    'Beer pilsner',\n    'Beer Glass',\n    'Parfait glass',\n    'Mason jar',\n    'Margarita glass',\n    'Martini Glass',\n    'Balloon Glass',\n    'Coupe Glass',\n  ];","import styled from '@emotion/styled';\n\nexport const CustomSelect = styled.button`\n  width: 335px;\n  height: 54px;\n  position: relative;\n  padding-left: 0;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  text-align: right;\n  color: #f3f3f3;\n\n  border-style: none;\n  border-bottom: 1px solid #f3f3f380;\n  background: #161f37;\n  border-radius: 200px;\n  &:focus {\n    border-bottom: 1px solid #f3f3f3;\n\n    outline: transparent;\n  }\n\n  &:focus span,\n  &:hover span {\n    color: #f3f3f3;\n  }\n\n  &::after {\n    padding-bottom: 14px;\n  }\n\n  span {\n    display: block;\n  }\n  \n  @media (min-width: 768px) {\n    width: 199px;\n    height: 56px;\n  }\n`;\n\nexport const PlaceholderWrap = styled.div`\n  display: flex;\n  align-items: center;\n  \n  color: ${({ selected }) => (!selected ? '#f3f3f380' : '#F3F3F3')};\n\n  span {\n    display: block;\n  }\n`;\nexport const Span = styled.span`\n  margin-left: 24px;\n\n  color: #f3f3f3;\n  font-size: 14px;\n  line-height: 1.29px;\n  color: ${({ selected }) => (!selected ? '#f3f3f380' : '#F3F3F3')};\n  font-family: 'Manrope', sans-serif;\n  font-weight: 400;\n  @media (min-width: 768px) {\n    font-size: 17px;\n    line-height: 1.5;\n  }\n  @media (min-width: 1440px) {\n    line-height: 1.56;\n  }\n`;\n\nexport const DropMenu = styled.div`\n  max-height: 300px;\n  overflow-y: scroll;\n  scroll-behavior: smooth;\n  width: 335px;\n\n  transition: 500ms linear color;\n\n  &::-webkit-scrollbar {\n    margin-top: 4px;\n    width: 8px;\n    background-color: transparent;\n    height: 4px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #f3f3f380;\n    border-radius: 4px;\n  }\n  &::-webkit-scrollbar-track-piece {\n    background: transparent;\n    margin-top: 18px;\n    margin-bottom: 18px;\n    margin-right: 4px;\n  }\n\n  position: absolute;\n  top: 58px;\n  right: 0;\n  padding: 18px 24px;\n\n  font-size: 12;\n  line-height: 1.3;\n  color: #f3f3f380;\n\n  border-radius: 12px;\n  background-color: #161f37;\n  z-index: 10;\n\n  div:not(:last-of-type) {\n    margin-bottom: 6px;\n  }\n\n  div:hover,\n  div:focus {\n    color: #f3f3f3;\n  }\n  @media (min-width: 768px) {\n    width: 199px;\n    top: 60px;\n    padding: 14px 23px;\n  }\n  @media (min-width: 1440px) {\n    width: 199px;\n  }\n`;\n\nexport const SelectWrapper = styled.div`\n  position: relative;\n  width: 335px;\n\n  @media (min-width: 768px) {\n    width: 199px;\n  }\n`;\n\nexport const SelectItem = styled.div`\n  cursor: pointer;\n  font-family: inherit;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.2;\n  color: #f3f3f3;\n\n  @media (min-width: 768px) {\n    font-size: 17px;\n    line-height: 1.5;\n  }\n  @media (min-width: 1440px) {\n    line-height: 1.56;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  display: block;\n  padding: 4px;\n\n  margin-bottom: 8px;\n\n  font-size: 12;\n  line-height: 1.3;\n  color: #f3f3f380;\n  width: 278px;\n  border-style: none;\n  background-color: #161f37;\n  border-bottom: 1px solid #f3f3f311;\n\n  &:focus {\n    color: #f3f3f3;\n    outline: transparent;\n  }\n\n  &::placeholder {\n    color: #f3f3f380;\n  }\n\n  &:focus::placeholder {\n    color: transparent;\n  }\n\n  @media (min-width: 768px) {\n    width: 145px;\n  }\n`;\n","import styled from 'styled-components';\nimport { RxChevronDown } from 'react-icons/rx';\n\nexport const ArrowStyled = styled(RxChevronDown)`\n  position: absolute;\n  right: 17px;\n  width: 20px;\n  height: 20px;\n  stroke-width: 1.8;\n  stroke: #f3f3f3;\n  transition: all 0.2s ease;\n  transform: ${({ open }) => (open ? 'rotate(180deg)' : 'rotate(0deg)')};\n  @media (min-width: 768px) {\n    right: 18px;\n  }\n`;\n","import { ArrowStyled } from './SelectArrow.styled';\n\nexport const SelectArrow = ({ isOpen }) => {\n  return <ArrowStyled open={isOpen} />;\n};\n","import { useField } from 'formik';\nimport { useEffect, useRef, useState } from 'react';\n\nimport {\n  CustomSelect,\n  DropMenu,\n  PlaceholderWrap,\n  SearchInput,\n  SelectItem,\n  SelectWrapper,\n  Span,\n} from './CustomSelect.styled';\n\nimport { SelectArrow } from './SelectArrow/SelectArrow';\n\nconst CustomSelectMenu = ({ items, title, onSelect }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\nconsole.log();\n  const selectRef = useRef();\n  const searchRef = useRef();\n  const dropdownRef = useRef();\n\n  const titleValue = title.toLowerCase();\n\n  const filteredItems = value =>\n    items.filter(item => item.toLowerCase().includes(value.toLowerCase()));\n\n  const [, meta, { setValue }] = useField({ name: titleValue });\n\n  const toggleMenu = () => {\n    setIsOpen(prevState => !prevState);\n  };\n\n  const handleClickItem = item => {\n    toggleMenu();\n    setValue(item);\n    setSearchQuery('');\n    onSelect(item);\n  };\n\n  useEffect(() => {\n    if (searchRef) {\n      setSearchQuery('');\n      if (isOpen && searchRef.current) {\n        searchRef.current.focus();\n      }\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    const handler = e => {\n      if (selectRef.current && selectRef.current.contains(e.target)) {\n        setIsOpen(true);\n      }\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsOpen(false);\n      }\n    };\n\n    window.addEventListener('click', handler);\n    return () => {\n      window.removeEventListener('click', handler);\n    };\n  });\n\n  return (\n    <SelectWrapper>\n      <CustomSelect type=\"button\" ref={selectRef} menuOpen={isOpen}>\n        {items && (\n          <PlaceholderWrap selected={meta.value}>\n            <Span>{meta.value ? meta.value : ''}</Span>\n            <SelectArrow isOpen={isOpen} />\n          </PlaceholderWrap>\n        )}\n      </CustomSelect>\n      {isOpen && items && (\n        <>\n          <DropMenu ref={dropdownRef}>\n            {items.length > 12 && (\n              <SearchInput\n                ref={searchRef}\n                type=\"text\"\n                name={`${title}Filter`}\n                placeholder=\"Search...\"\n                onChange={e => setSearchQuery(e.target.value)}\n              />\n            )}\n            {filteredItems(searchQuery).map((item, index) => (\n              <SelectItem key={index} onClick={() => handleClickItem(item)}>\n                {item}\n              </SelectItem>\n            ))}\n          </DropMenu>\n        </>\n      )}\n    </SelectWrapper>\n  );\n};\n\nexport default CustomSelectMenu;","import { selectVisibleDrinks } from '../../redux/drink/selectorsForDrinksPages';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TitlePage from '../../components/TitlePage/TitlePage';\nimport SearchDrinksInput from '../../components/SearchDrinksInput/SearchDrinksInput';\nimport { categoriesList } from '../../components/ForSelectValue/CategoriesList';\nimport { ingredientsList } from '../../components/ForSelectValue/IngredientsList';\nimport {\n  Container,\n  FormStyled,\n  DrinksPageStyle,\n  WraperForm,\n  ForInputLupaSvg,\n  WraperSvg,\n  ContainerForPage,\n  ListCocktail,\n} from './DrinksPages.styled';\nimport ItemCocktail from '../../components/ItemCocktail/ItemCocktail';\nimport CustomSelect from 'components/CustomSelectForDrinksPage';\nimport { Formik } from 'formik';\nimport { getMainPageAllDrinks } from 'services/fetchDrinksForDrinksPages';\nimport SvgGeneratorSvgSelector from '../../components/SvgComponents';\nimport { Paginator } from '../../components/Pagination/Pagination';\nimport {\n  selectAllDrinks,\n  selectIsLoading,\n  selectDrinksError,\n} from '../../redux/drink/selectorsForDrinksPages';\n\nconst initialValues = {\n  category: 'All categories',\n  ingredients: 'Ingredients',\n};\n\nconst DrinksPage = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectAllDrinks);\n  console.log('Vladuser', items);\n  const status = useSelector(selectIsLoading);\n  const error = useSelector(selectDrinksError);\n  const visibleDrinks = useSelector(selectVisibleDrinks);\n  console.log('Vladik', visibleDrinks);\n  const [currentPage, setCurrentPage] = useState(1);\n  const limit = 11;\n\n  useEffect(() => {\n    dispatch(getMainPageAllDrinks({ page: currentPage, limit }));\n  }, [dispatch, currentPage, limit]);\n\n  const handlePageChange = selectedPage => {\n    setCurrentPage(selectedPage + 1);\n  };\n\n  const totalCount = items.length;\n\n  if (status === 'loading') return <div>Loading...</div>;\n\n  if (error) return <div>error</div>;\n\n  //  if (error) return <ErrorPage />;\n\n  // if (!items || items.length === 0) {\n  //   return (\n  //     <Container>\n  //       <FavoritePageTitle>Favorites</FavoritePageTitle>\n  //       <NoImg text=\"You haven't added any favorite cocktails yet.\" />\n  //     </Container>\n  //   );\n  // }\n\n  const handleCategorySelect = category => {\n    console.log('Selected category:', category);\n  };\n\n  const handleIngredientSelect = ingredient => {\n    console.log('Selected ingredient:', ingredient);\n  };\n\n  return (\n    <DrinksPageStyle>\n      <ContainerForPage>\n        <Container>\n          <TitlePage title={'Drinks'} />\n          <WraperForm>\n            <ForInputLupaSvg>\n              <SearchDrinksInput />\n              <WraperSvg>\n                <SvgGeneratorSvgSelector id=\"svglupa\" />\n              </WraperSvg>\n            </ForInputLupaSvg>\n            <Formik initialValues={initialValues}>\n              {({ setFieldValue }) => (\n                <FormStyled>\n                  <CustomSelect\n                    items={categoriesList}\n                    title={'Category'}\n                    onSelect={handleCategorySelect}\n                  />\n                  <CustomSelect\n                    items={ingredientsList}\n                    title={'Ingredients'}\n                    onSelect={handleIngredientSelect}\n                  />\n                </FormStyled>\n              )}\n            </Formik>\n          </WraperForm>\n          <ListCocktail>\n            {visibleDrinks.map(drink => (\n              <ItemCocktail drink={drink} />\n            ))}\n          </ListCocktail>\n          <Paginator\n            limit={limit}\n            currentPage={currentPage}\n            items={totalCount}\n            handlePageChange={handlePageChange}\n            pageRangeDisplayed={5}\n          />\n        </Container>\n      </ContainerForPage>\n    </DrinksPageStyle>\n  );\n};\n\nexport default DrinksPage;"],"names":["Pagination","styled","ReactPaginate","attrs","activeClassName","_templateObject","_taggedTemplateLiteral","Paginator","_ref","limit","currentPage","items","handlePageChange","pageRangeDisplayed","pageCount","Math","ceil","_jsx","children","onPageChange","_ref2","selected","window","scrollTo","top","behavior","previousLabel","RxChevronLeft","nextLabel","RxChevronRight","breakLabel","forcePage","renderOnZeroPageCount","marginPagesDisplayed","id","_jsxs","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","selectAllDrinks","state","alldrinks","selectDrinksError","error","selectIsLoading","isLoading","selectDrinksFilter","filters","selectVisibleDrinks","createSelector","drinks","filter","drink","toLowerCase","includes","Title","TitlePage","title","SearchInput","drinksQueryFilter","useSelector","dispatch","useDispatch","type","placeholder","autoFocus","value","onChange","e","normalizedValue","target","trim","setDrinksFilter","categoriesList","ingredientsList","CustomSelect","PlaceholderWrap","_templateObject2","Span","_templateObject3","DropMenu","_templateObject4","SelectWrapper","_templateObject5","SelectItem","_templateObject6","_templateObject7","ArrowStyled","RxChevronDown","open","SelectArrow","isOpen","onSelect","_useState","useState","_useState2","_slicedToArray","setIsOpen","_useState3","_useState4","searchQuery","setSearchQuery","console","log","selectRef","useRef","searchRef","dropdownRef","titleValue","_useField","useField","name","_useField2","meta","setValue","handleClickItem","item","prevState","useEffect","current","focus","handler","contains","addEventListener","removeEventListener","ref","menuOpen","_Fragment","length","concat","map","index","onClick","initialValues","category","ingredients","status","visibleDrinks","setCurrentPage","getMainPageAllDrinks","page","totalCount","handleCategorySelect","handleIngredientSelect","ingredient","DrinksPageStyle","ContainerForPage","Container","WraperForm","ForInputLupaSvg","SearchDrinksInput","WraperSvg","SvgGeneratorSvgSelector","Formik","setFieldValue","FormStyled","ListCocktail","ItemCocktail","selectedPage"],"sourceRoot":""}