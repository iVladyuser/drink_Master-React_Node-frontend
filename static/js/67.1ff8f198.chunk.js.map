{"version":3,"file":"static/js/67.1ff8f198.chunk.js","mappings":"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","sources":["components/SignUpSignInForms/AuthForm.styled.jsx","components/SignUpSignInForms/AuthForm.jsx","components/SignUpSignInForms/SignUpForm/SignUp.styled.jsx","components/DatePicker/DatePicker.styled.jsx","components/DatePicker/DatePicker.jsx","components/SignUpSignInForms/SignUpForm/SignUpForm.jsx","pages/WelcomePages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { StandartContainer } from '../../styles/Container.styled';\n\nimport welcomeMob1x from '../../images/welcome/welcomeMob@1x.jpg';\n// import welcomeMob2x from '../../images/welcome/welcomeMob@2x.jpg';\n\nimport welcomeTab1x from '../../images/welcome/welcomeTab@1x.jpg';\n// import welcomeTab2x from '../../images/welcome/welcomeTab@2x.jpg';\n\nimport welcomeDesk1x from '../../images/welcome/welcomeDesk@1x.jpg';\n// import welcomeDesk2x from '../../images/welcome/welcomeDesk@2x.jpg';\n\nimport welcomeElipseTopMob from '../../images/welcome/welcomeElipsesTopMob.svg';\nimport welcomeElipseBottomMob from '../../images/welcome/welcomeElipseBottomMob.svg';\n\nimport welcomeElipseTopTab from '../../images/welcome/welcomeElipsesTopTab.svg';\nimport welcomeElipseBottomTab from '../../images/welcome/welcomeElipseBottomTab.svg';\n\nimport welcomeElipseTopDesk from '../../images/welcome/welcomeElipsesTopDesk.svg';\nimport welcomeElipseBottomDesk from '../../images/welcome/welcomeElipseBottomDesk.svg';\n\nexport const AuthSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n  max-width: 100vw;\n  height: 100vh;\n\n  background: url(${welcomeElipseTopMob}), url(${welcomeElipseBottomMob}),\n    url(${welcomeMob1x});\n\n  background-repeat: no-repeat;\n  background-size: 100%, 40%, auto;\n  background-position: top left, bottom right, center right;\n  background-color: #0a090f;\n\n  @media (min-width: 768px) {\n    background: url(${welcomeElipseTopTab}), url(${welcomeElipseBottomTab}),\n      url(${welcomeTab1x});\n    background-repeat: no-repeat;\n    background-size: 70%, 30%, 60%;\n    background-position: top left, bottom right, center right;\n    background-color: #0a090f;\n  }\n  @media (min-width: 1440px) {\n    background: url(${welcomeElipseTopDesk}), url(${welcomeElipseBottomDesk}),\n      url(${welcomeDesk1x});\n    background-repeat: no-repeat;\n    background-size: 50%, 25%, 60%;\n    background-position: top left, bottom right, center right;\n    background-color: #07060b;\n  }\n`;\n\nexport const Container = styled(StandartContainer)`\n  @media (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media (min-width: 768px) {\n    width: 768px;\n  }\n\n  @media (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\nexport const Title = styled.h1`\n  font-size: 28px;\n  font-weight: 600;\n  letter-spacing: -0.02px;\n  line-height: 1.14;\n  color: #fafafa;\n  margin-bottom: 28px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    line-height: 1.1;\n  }\n\n  @media (min-width: 1440px) {\n    text-shadow: 0 4px 0 rgba(0, 0, 0, 0.25);\n  }\n`;\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const ButtonLink = styled(Link)`\n  margin-left: auto;\n  margin-right: auto;\n  text-decoration: underline;\n  color: #f3f3f3;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.28;\n  }\n`;\n","import {\n  Container,\n  Title,\n  ButtonWrapper,\n  AuthSection,\n} from './AuthForm.styled';\n\nexport const AuthFormSection = ({ title, children }) => {\n  return (\n    <AuthSection>\n      <Container>\n        <ButtonWrapper>\n          <Title>{title}</Title>\n          {children}\n        </ButtonWrapper>\n      </Container>\n    </AuthSection>\n  );\n};\n","import { Form, Field } from 'formik';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const AuthForm = styled(Form)``;\nexport const Input = styled(Field)``;\nexport const Button = styled.button``;\nexport const PasswordInputWrap = styled.div``;\nexport const SignInLink = styled(Link)``;\n","import { createGlobalStyle, styled } from 'styled-components';\nexport const DataBtn = styled.div`\n  padding: 6px 12px;\n  color: #ffffff;\n  background: #3e85f3;\n  border-radius: 8px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 18px;\n  text-align: center;\n  text-transform: uppercase;\n  @media screen and (min-width: 768px) {\n    margin-top: 33px;\n    margin-bottom: 33px;\n    padding: 8px 12px;\n    font-size: 16px;\n  }\n`;\nexport const CalendarGlobalStyles = createGlobalStyle`\n  .react-datepicker__wrapper {\n    position: relative;\n\n  }\n  .react-datepicker {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-1%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 327px;\n    height: 354px;\n    padding: 9px 18px;\n  background-color: #3e85f3;\n    font-family: Inter;\n    border-radius: 16px;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: #3e85f3;\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 8px 8px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n  }\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day react-datepicker__day--018.react-datepicker__day--selected react-datepicker__day--today{\n    outline: none;\n    border: none;\n}\n  .react-datepicker__current-month {\n    font-family: Inter;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px;\n    text-align: center;\n    color: white;\n  }\n  .react-datepicker__day-name {\n    margin: 0;\n   padding: 8px 8px;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px;\n    text-align: center;\n    color: white;\n  }\n  .react-datepicker__navigation {\n    margin-top: 24px;\n    color: white;\n  }\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation--next {\n    right: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: white;\n  }\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: white;\n  }\n  .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    flex-shrink: 0;\n    margin: 0;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    color: white;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 7px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-top: 16px;\n    margin: 0;\n  }\n  .react-datepicker__day--selected {\n    background-color:white;\n    color:#3e85f3;\n    font-size: 14px;\n  }\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n  background-color:white;\n  }\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color:white;\n    color:#3e85f3;\n  }\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color:white;\n    color:#3e85f3;\n  }\n  .react-datepicker__day--weekend {\n    opacity: 50%;\n  }\n.react-datepicker__day--outside-month {\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n  .react-datepicker__triangle {\n    visibility: hidden;\n  }\n`;\n\nexport const TitleWrapper = styled.button`\n  width: 195px;\n  color: #ffffff;\n  background: #3e85f3;\n  border-radius: 8px;\n  font-weight: 700;\n  line-height: 18px;\n  text-align: center;\n  text-transform: uppercase;\n  padding: 8px 12px;\n  font-size: 16px;\n  justify-content: space-around;\n  align-items: center;\n`;\n","import { forwardRef, useState } from 'react';\nimport { format } from 'date-fns';\nimport DatePicker from 'react-datepicker';\nimport { CalendarGlobalStyles, TitleWrapper } from './DatePicker.styled';\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nconst StyledDatePicker = () => {\n  const [selectedDate, setSelectedDate] = useState(Date.now());\n\n  const CustomInput = forwardRef(({ value, onClick }, ref) => {\n    return (\n      <TitleWrapper onClick={onClick} ref={ref}>\n        {format(selectedDate, 'dd-MM-yyyy')}\n      </TitleWrapper>\n    );\n  });\n\n  return (\n    <>\n      <DatePicker\n        selected={selectedDate}\n        onChange={date => {\n          setSelectedDate(date);\n        }}\n        customInput={<CustomInput />}\n        dateFormat={'dd MM yyyy'}\n        calendarStartDay={1}\n        formatWeekDay={day => day.substr(0, 1)}\n      />\n      <CalendarGlobalStyles />\n    </>\n  );\n};\n\nexport default StyledDatePicker;\n","// import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { signUp } from '../../../redux/auth/operations';\nimport StyledDatePicker from '../../DatePicker/DatePicker';\n\nimport {\n  AuthForm,\n  Input,\n  Button,\n  PasswordInputWrap,\n  SignInLink,\n} from './SignUp.styled';\n\nconst validateFormSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'The name is short.')\n    .required('Field is required.'),\n  dateBirth: Yup.string().required('Field is required.'),\n  email: Yup.string()\n    .email('Please enter a valid email')\n    .required('Field is required.'),\n  password: Yup.string()\n    .min(8, 'Password must contain 8 characters.')\n    .max(20, 'Password is too Long!')\n    .required('Field is required.'),\n});\n\nconst initialValues = { name: '', dateBirth: '', email: '', password: '' };\n\nexport const SignUpForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, dateBirth, email, password } = values;\n\n    dispatch(signUp({ name, dateBirth, email, password }))\n      .unwrap()\n      .then(() => toast.success('Registration successfully'))\n      .catch(() => toast.error('Something went wrong. Try again'));\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validateFormSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values }) => (\n        <AuthForm>\n          <>\n            <PasswordInputWrap>\n              <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n            </PasswordInputWrap>\n\n            <div>\n              <StyledDatePicker\n                name=\"dateBirth\"\n                type=\"text\"\n                value={values.dateBirth}\n                placeholder=\"Date of birth\"\n              />\n            </div>\n\n            <PasswordInputWrap>\n              <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n            </PasswordInputWrap>\n\n            <PasswordInputWrap>\n              <Input\n                value={values.password}\n                name=\"password\"\n                placeholder=\"Password\"\n              />\n            </PasswordInputWrap>\n          </>\n\n          <Button type=\"submit\">Sign Up</Button>\n          <SignInLink to=\"/signin\">Sign In</SignInLink>\n        </AuthForm>\n      )}\n    </Formik>\n  );\n};\n","import { SignUpForm } from 'components/SignUpSignInForms/SignUpForm/SignUpForm';\nimport { AuthFormSection } from '../../../components/SignUpSignInForms/AuthForm';\n\nconst SignUpPage = () => {\n  return (\n    <AuthFormSection title={'Sign Up'}>\n      <SignUpForm></SignUpForm>\n    </AuthFormSection>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["AuthSection","styled","_templateObject","_taggedTemplateLiteral","welcomeElipseTopMob","welcomeElipseBottomMob","welcomeMob1x","welcomeElipseTopTab","welcomeElipseBottomTab","welcomeTab1x","welcomeElipseTopDesk","welcomeElipseBottomDesk","welcomeDesk1x","Container","StandartContainer","_templateObject2","Title","_templateObject3","ButtonWrapper","_templateObject4","Link","_templateObject5","AuthFormSection","_ref","title","children","_jsx","_jsxs","AuthForm","Form","Input","Field","Button","PasswordInputWrap","SignInLink","CalendarGlobalStyles","createGlobalStyle","TitleWrapper","_useState","useState","Date","now","_useState2","_slicedToArray","selectedDate","setSelectedDate","CustomInput","forwardRef","ref","value","onClick","format","_Fragment","DatePicker","selected","onChange","date","customInput","dateFormat","calendarStartDay","formatWeekDay","day","substr","validateFormSchema","Yup","shape","name","min","required","dateBirth","email","password","max","initialValues","SignUpForm","dispatch","useDispatch","Formik","validationSchema","onSubmit","values","resetForm","signUp","unwrap","then","toast","catch","_ref2","type","placeholder","StyledDatePicker","to"],"sourceRoot":""}